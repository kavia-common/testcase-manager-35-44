{"is_source_file": true, "format": "Python", "description": "This file defines asynchronous functions for interacting with configuration data in a database, including creating/updating configs, retrieving a config by key, and listing all configs. It uses SQLAlchemy's async API and references a 'models.Config' model.", "external_files": ["src.core.models"], "external_methods": ["sqlalchemy.select", "sqlalchemy.ext.asyncio.AsyncSession.execute", "sqlalchemy.ext.asyncio.AsyncSession.flush", "sqlalchemy.ext.asyncio.AsyncSession.commit", "sqlalchemy.ext.asyncio.AsyncSession.refresh"], "published": ["upsert_config", "get_config", "list_configs"], "classes": [], "methods": [{"name": "models.Config upsert_config(db: AsyncSession, key: str, value: Optional[str])", "description": "Creates or updates a configuration entry in the database based on the provided key and value.", "scope": "", "scopeKind": ""}, {"name": "Optional[models.Config] get_config(db: AsyncSession, key: str)", "description": "Retrieves a configuration object from the database by its key.", "scope": "", "scopeKind": ""}, {"name": "List[models.Config] list_configs(db: AsyncSession)", "description": "Retrieves all configuration objects from the database.", "scope": "", "scopeKind": ""}], "calls": ["db.execute", "db.add", "db.flush", "db.commit", "db.refresh", "select"], "search-terms": ["async config database", "sqlalchemy Config model", "upsert_config function", "list_configs function", "get_config function"], "state": 2, "file_id": 15, "knowledge_revision": 31, "git_revision": "", "ctags": [{"_type": "tag", "name": "get_config", "path": "/home/kavia/workspace/code-generation/testcase-manager-35-44/robot_backend/src/services/configs.py", "pattern": "/^async def get_config(db: AsyncSession, key: str) -> Optional[models.Config]:$/", "language": "Python", "typeref": "typename:Optional[models.Config]", "kind": "function", "signature": "(db: AsyncSession, key: str)"}, {"_type": "tag", "name": "list_configs", "path": "/home/kavia/workspace/code-generation/testcase-manager-35-44/robot_backend/src/services/configs.py", "pattern": "/^async def list_configs(db: AsyncSession) -> List[models.Config]:$/", "language": "Python", "typeref": "typename:List[models.Config]", "kind": "function", "signature": "(db: AsyncSession)"}, {"_type": "tag", "name": "upsert_config", "path": "/home/kavia/workspace/code-generation/testcase-manager-35-44/robot_backend/src/services/configs.py", "pattern": "/^async def upsert_config(db: AsyncSession, key: str, value: Optional[str]) -> models.Config:$/", "language": "Python", "typeref": "typename:models.Config", "kind": "function", "signature": "(db: AsyncSession, key: str, value: Optional[str])"}], "hash": "89092c45f2dc3d3735182152e59b0b77", "format-version": 4, "code-base-name": "robot_backend", "filename": "robot_backend/src/services/configs.py", "revision_history": [{"31": ""}]}