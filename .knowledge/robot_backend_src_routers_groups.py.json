{"is_source_file": true, "format": "Python", "description": "This source file defines API routes for managing 'groups' using FastAPI. It includes endpoints for listing, retrieving, creating, updating, and deleting groups, as well as assigning and removing test cases within groups, all relying on asynchronous database interactions.", "external_files": ["src/core/db", "src/core/schemas", "src/services/groups"], "external_methods": ["get_db", "GroupCreate", "GroupOut", "GroupUpdate", "GroupAssignRequest", "list_groups", "get_group", "create_group", "update_group", "delete_group", "assign_testcase", "remove_testcase"], "published": [], "classes": [], "methods": [{"name": "list_groups(db: AsyncSession = Depends(get_db))", "description": "API endpoint to list all groups", "scope": "", "scopeKind": ""}, {"name": "get_group(group_id: int, db: AsyncSession = Depends(get_db))", "description": "API endpoint to retrieve a single group by its ID", "scope": "", "scopeKind": ""}, {"name": "create_group(payload: GroupCreate, db: AsyncSession = Depends(get_db))", "description": "API endpoint to create a new group", "scope": "", "scopeKind": ""}, {"name": "update_group(group_id: int, payload: GroupUpdate, db: AsyncSession = Depends(get_db))", "description": "API endpoint to update an existing group", "scope": "", "scopeKind": ""}, {"name": "delete_group(group_id: int, db: AsyncSession = Depends(get_db))", "description": "API endpoint to delete a group", "scope": "", "scopeKind": ""}, {"name": "assign_testcase(group_id: int, payload: GroupAssignRequest, db: AsyncSession = Depends(get_db))", "description": "API endpoint to assign a testcase to a group", "scope": "", "scopeKind": ""}, {"name": "remove_testcase(group_id: int, testcase_id: int, db: AsyncSession = Depends(get_db))", "description": "API endpoint to remove a testcase from a group", "scope": "", "scopeKind": ""}], "calls": ["svc.list_groups", "svc.get_group", "svc.create_group", "svc.update_group", "svc.delete_group", "svc.assign_testcase", "svc.remove_testcase"], "search-terms": ["FastAPI group management", "Group API routes", "group CRUD endpoints", "assign test case to group", "remove test case from group"], "state": 2, "file_id": 17, "knowledge_revision": 35, "git_revision": "", "ctags": [{"_type": "tag", "name": "assign_testcase", "path": "/home/kavia/workspace/code-generation/testcase-manager-35-44/robot_backend/src/routers/groups.py", "pattern": "/^async def assign_testcase(group_id: int, payload: GroupAssignRequest, db: AsyncSession = Depends/", "language": "Python", "kind": "function", "signature": "(group_id: int, payload: GroupAssignRequest, db: AsyncSession = Depends(get_db))"}, {"_type": "tag", "name": "create_group", "path": "/home/kavia/workspace/code-generation/testcase-manager-35-44/robot_backend/src/routers/groups.py", "pattern": "/^async def create_group(payload: GroupCreate, db: AsyncSession = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(payload: GroupCreate, db: AsyncSession = Depends(get_db))"}, {"_type": "tag", "name": "delete_group", "path": "/home/kavia/workspace/code-generation/testcase-manager-35-44/robot_backend/src/routers/groups.py", "pattern": "/^async def delete_group(group_id: int, db: AsyncSession = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(group_id: int, db: AsyncSession = Depends(get_db))"}, {"_type": "tag", "name": "get_group", "path": "/home/kavia/workspace/code-generation/testcase-manager-35-44/robot_backend/src/routers/groups.py", "pattern": "/^async def get_group(group_id: int, db: AsyncSession = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(group_id: int, db: AsyncSession = Depends(get_db))"}, {"_type": "tag", "name": "list_groups", "path": "/home/kavia/workspace/code-generation/testcase-manager-35-44/robot_backend/src/routers/groups.py", "pattern": "/^async def list_groups(db: AsyncSession = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(db: AsyncSession = Depends(get_db))"}, {"_type": "tag", "name": "remove_testcase", "path": "/home/kavia/workspace/code-generation/testcase-manager-35-44/robot_backend/src/routers/groups.py", "pattern": "/^async def remove_testcase(group_id: int, testcase_id: int, db: AsyncSession = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(group_id: int, testcase_id: int, db: AsyncSession = Depends(get_db))"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/testcase-manager-35-44/robot_backend/src/routers/groups.py", "pattern": "/^router = APIRouter(prefix=\"\\/groups\", tags=[\"Groups\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "svc", "path": "/home/kavia/workspace/code-generation/testcase-manager-35-44/robot_backend/src/routers/groups.py", "pattern": "/^from src.services import groups as svc$/", "language": "Python", "kind": "unknown", "nameref": "unknown:groups"}, {"_type": "tag", "name": "update_group", "path": "/home/kavia/workspace/code-generation/testcase-manager-35-44/robot_backend/src/routers/groups.py", "pattern": "/^async def update_group(group_id: int, payload: GroupUpdate, db: AsyncSession = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(group_id: int, payload: GroupUpdate, db: AsyncSession = Depends(get_db))"}], "hash": "384df94f8d7f09360d91073dabf7c9df", "format-version": 4, "code-base-name": "robot_backend", "filename": "robot_backend/src/routers/groups.py", "fields": [{"name": "router = APIRouter(prefix=\"\\/groups\", tags=[\"Groups\"])", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"35": ""}]}