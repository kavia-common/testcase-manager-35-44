{"is_source_file": true, "format": "Python", "description": "This file defines database connectivity and session management for an async SQLAlchemy ORM setup, including functions to get the engine, session factory, and perform basic database health checks.", "external_files": ["from .settings import get_settings"], "external_methods": ["get_settings()", "settings.database_dsn()"], "published": ["get_db", "ping_db"], "classes": [{"name": "Base", "description": "Declarative base class for ORM models using SQLAlchemy's ORM system."}], "methods": [{"name": "get_engine()", "description": "Creates or returns a singleton async database engine.", "scope": "", "scopeKind": ""}, {"name": "async_sessionmaker[AsyncSession] get_session_factory()", "description": "Creates or returns a singleton async session factory.", "scope": "", "scopeKind": ""}, {"name": "AsyncGenerator[AsyncSession,None] get_db()", "description": "Asynchronously yields a database session for request handling.", "scope": "", "scopeKind": ""}, {"name": "bool ping_db()", "description": "Performs a simple query to check database connectivity.", "scope": "", "scopeKind": ""}], "calls": ["get_settings", "settings.database_dsn", "create_async_engine", "async_sessionmaker", "get_engine", "get_session_factory", "get_session_factory", "session.execute", "result.scalar_one", "session.close"], "search-terms": ["async SQLAlchemy engine", "async database session", "ORM base class", "database connectivity", "Python async database"], "state": 2, "file_id": 6, "knowledge_revision": 56, "git_revision": "04de29e13b1718ced7d3d2857c1094b5c23a4e8d", "revision_history": [{"13": ""}, {"56": "04de29e13b1718ced7d3d2857c1094b5c23a4e8d"}], "ctags": [{"_type": "tag", "name": "Base", "path": "/home/kavia/workspace/code-generation/testcase-manager-35-44/robot_backend/src/core/db.py", "pattern": "/^class Base(DeclarativeBase):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "_engine", "path": "/home/kavia/workspace/code-generation/testcase-manager-35-44/robot_backend/src/core/db.py", "pattern": "/^_engine = None$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "_session_factory", "path": "/home/kavia/workspace/code-generation/testcase-manager-35-44/robot_backend/src/core/db.py", "pattern": "/^_session_factory: Optional[async_sessionmaker[AsyncSession]] = None$/", "language": "Python", "typeref": "typename:Optional[async_sessionmaker[AsyncSession]]", "kind": "variable"}, {"_type": "tag", "name": "get_db", "path": "/home/kavia/workspace/code-generation/testcase-manager-35-44/robot_backend/src/core/db.py", "pattern": "/^async def get_db() -> AsyncGenerator[AsyncSession, None]:$/", "language": "Python", "typeref": "typename:AsyncGenerator[AsyncSession,None]", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_engine", "path": "/home/kavia/workspace/code-generation/testcase-manager-35-44/robot_backend/src/core/db.py", "pattern": "/^def get_engine():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_session_factory", "path": "/home/kavia/workspace/code-generation/testcase-manager-35-44/robot_backend/src/core/db.py", "pattern": "/^def get_session_factory() -> async_sessionmaker[AsyncSession]:$/", "language": "Python", "typeref": "typename:async_sessionmaker[AsyncSession]", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "ping_db", "path": "/home/kavia/workspace/code-generation/testcase-manager-35-44/robot_backend/src/core/db.py", "pattern": "/^async def ping_db() -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "function", "signature": "()"}], "hash": "10d095ce56d9cc36d427844e91b22878", "format-version": 4, "code-base-name": "robot_backend", "filename": "robot_backend/src/core/db.py", "fields": [{"name": "_engine = None", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "Optional[async_sessionmaker[AsyncSession]] _session_factory", "scope": "", "scopeKind": "", "description": "unavailable"}]}