{"is_source_file": true, "format": "Python", "description": "This file defines the database connection setup and utility functions for managing asynchronous SQLAlchemy sessions, along with a base class for ORM models.", "external_files": ["from .settings import get_settings"], "external_methods": ["get_settings", "settings.database_dsn"], "published": ["get_db", "ping_db"], "classes": [{"name": "Base", "description": "Declarative base class for ORM models."}], "methods": [{"name": "get_engine()", "description": "Creates or retrieves the singleton async SQLAlchemy engine.", "scope": "", "scopeKind": ""}, {"name": "async_sessionmaker[AsyncSession] get_session_factory()", "description": "Creates or retrieves the singleton async session factory.", "scope": "", "scopeKind": ""}, {"name": "AsyncGenerator[AsyncSession,None] get_db()", "description": "Asynchronous generator yielding a database session for request scope.", "scope": "", "scopeKind": ""}, {"name": "bool ping_db()", "description": "Performs a simple query to check database connectivity.", "scope": "", "scopeKind": ""}], "calls": ["get_settings", "create_async_engine", "get_engine", "async_sessionmaker", "get_session_factory", "session.close", "session.execute", "text"], "search-terms": ["database", "asyncio", "SQLAlchemy", "session", "engine", "Base", "db connectivity", "async session factory", "connection pooling"], "state": 2, "file_id": 6, "knowledge_revision": 13, "git_revision": "", "ctags": [{"_type": "tag", "name": "Base", "path": "/home/kavia/workspace/code-generation/testcase-manager-35-44/robot_backend/src/core/db.py", "pattern": "/^class Base(DeclarativeBase):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "_engine", "path": "/home/kavia/workspace/code-generation/testcase-manager-35-44/robot_backend/src/core/db.py", "pattern": "/^_engine = None$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "_session_factory", "path": "/home/kavia/workspace/code-generation/testcase-manager-35-44/robot_backend/src/core/db.py", "pattern": "/^_session_factory: Optional[async_sessionmaker[AsyncSession]] = None$/", "language": "Python", "typeref": "typename:Optional[async_sessionmaker[AsyncSession]]", "kind": "variable"}, {"_type": "tag", "name": "get_db", "path": "/home/kavia/workspace/code-generation/testcase-manager-35-44/robot_backend/src/core/db.py", "pattern": "/^async def get_db() -> AsyncGenerator[AsyncSession, None]:$/", "language": "Python", "typeref": "typename:AsyncGenerator[AsyncSession,None]", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_engine", "path": "/home/kavia/workspace/code-generation/testcase-manager-35-44/robot_backend/src/core/db.py", "pattern": "/^def get_engine():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_session_factory", "path": "/home/kavia/workspace/code-generation/testcase-manager-35-44/robot_backend/src/core/db.py", "pattern": "/^def get_session_factory() -> async_sessionmaker[AsyncSession]:$/", "language": "Python", "typeref": "typename:async_sessionmaker[AsyncSession]", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "ping_db", "path": "/home/kavia/workspace/code-generation/testcase-manager-35-44/robot_backend/src/core/db.py", "pattern": "/^async def ping_db() -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "function", "signature": "()"}], "hash": "11f7bc49d43e8d1cf4bb1e7b4c13e74b", "format-version": 4, "code-base-name": "robot_backend", "filename": "robot_backend/src/core/db.py", "fields": [{"name": "_engine = None", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "Optional[async_sessionmaker[AsyncSession]] _session_factory", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"13": ""}]}