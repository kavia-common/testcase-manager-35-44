{"is_source_file": true, "format": "Python", "description": "This file contains asynchronous functions for CRUD operations on test case data, using SQLAlchemy for database interactions. It provides an interface to list, retrieve, create, update, and delete test cases within a test management system.", "external_files": ["src.core.models", "src.core.schemas"], "external_methods": ["sqlalchemy.select", "sqlalchemy.update", "sqlalchemy.delete", "sqlalchemy.ext.asyncio.AsyncSession.execute", "sqlalchemy.ext.asyncio.AsyncSession.add", "sqlalchemy.ext.asyncio.AsyncSession.flush", "sqlalchemy.ext.asyncio.AsyncSession.commit", "sqlalchemy.ext.asyncio.AsyncSession.refresh"], "published": ["list_testcases", "get_testcase", "create_testcase", "update_testcase", "delete_testcase"], "classes": [], "methods": [{"name": "List[models.TestCase] list_testcases(db: AsyncSession)", "description": "Lists all test cases ordered by creation date in descending order.", "scope": "", "scopeKind": ""}, {"name": "Optional[models.TestCase] get_testcase(db: AsyncSession, testcase_id: int)", "description": "Retrieves a single test case by its ID.", "scope": "", "scopeKind": ""}, {"name": "models.TestCase create_testcase(db: AsyncSession, data: TestCaseCreate)", "description": "Creates a new test case record in the database.", "scope": "", "scopeKind": ""}, {"name": "Optional[models.TestCase] update_testcase(db: AsyncSession, testcase_id: int, data: TestCaseUpdate)", "description": "Updates an existing test case identified by its ID with new data.", "scope": "", "scopeKind": ""}, {"name": "bool delete_testcase(db: AsyncSession, testcase_id: int)", "description": "Deletes a test case and associated records by ID.", "scope": "", "scopeKind": ""}], "calls": ["db.execute", "db.add", "db.flush", "db.commit", "db.refresh"], "search-terms": ["async", "testcases", "CRUD", "sqlalchemy", "AsyncSession", "test case management"], "state": 2, "file_id": 9, "knowledge_revision": 19, "git_revision": "", "ctags": [{"_type": "tag", "name": "create_testcase", "path": "/home/kavia/workspace/code-generation/testcase-manager-35-44/robot_backend/src/services/testcases.py", "pattern": "/^async def create_testcase(db: AsyncSession, data: TestCaseCreate) -> models.TestCase:$/", "language": "Python", "typeref": "typename:models.TestCase", "kind": "function", "signature": "(db: AsyncSession, data: TestCaseCreate)"}, {"_type": "tag", "name": "delete_testcase", "path": "/home/kavia/workspace/code-generation/testcase-manager-35-44/robot_backend/src/services/testcases.py", "pattern": "/^async def delete_testcase(db: AsyncSession, testcase_id: int) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "function", "signature": "(db: AsyncSession, testcase_id: int)"}, {"_type": "tag", "name": "get_testcase", "path": "/home/kavia/workspace/code-generation/testcase-manager-35-44/robot_backend/src/services/testcases.py", "pattern": "/^async def get_testcase(db: AsyncSession, testcase_id: int) -> Optional[models.TestCase]:$/", "language": "Python", "typeref": "typename:Optional[models.TestCase]", "kind": "function", "signature": "(db: AsyncSession, testcase_id: int)"}, {"_type": "tag", "name": "list_testcases", "path": "/home/kavia/workspace/code-generation/testcase-manager-35-44/robot_backend/src/services/testcases.py", "pattern": "/^async def list_testcases(db: AsyncSession) -> List[models.TestCase]:$/", "language": "Python", "typeref": "typename:List[models.TestCase]", "kind": "function", "signature": "(db: AsyncSession)"}, {"_type": "tag", "name": "update_testcase", "path": "/home/kavia/workspace/code-generation/testcase-manager-35-44/robot_backend/src/services/testcases.py", "pattern": "/^async def update_testcase(db: AsyncSession, testcase_id: int, data: TestCaseUpdate) -> Optional[/", "language": "Python", "typeref": "typename:Optional[models.TestCase]", "kind": "function", "signature": "(db: AsyncSession, testcase_id: int, data: TestCaseUpdate)"}], "hash": "605421bd6436fcd8e944fad273f23678", "format-version": 4, "code-base-name": "robot_backend", "filename": "robot_backend/src/services/testcases.py", "revision_history": [{"19": ""}]}