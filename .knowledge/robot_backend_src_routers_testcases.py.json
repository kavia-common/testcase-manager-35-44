{"is_source_file": true, "format": "Python", "description": "This source file defines FastAPI routes for managing test cases, including listing, retrieving, creating, updating, and deleting test cases. It relies on external services and database dependencies to perform these operations.", "external_files": ["src/core/db", "src/core/schemas", "src/services"], "external_methods": ["get_db", "TestCaseCreate", "TestCaseOut", "TestCaseUpdate", "testcases.list_testcases", "testcases.get_testcase", "testcases.create_testcase", "testcases.update_testcase", "testcases.delete_testcase"], "published": ["router"], "classes": [], "methods": [{"name": "list_testcases(db: AsyncSession = Depends(get_db))", "description": "Handles GET requests to list all test cases, returning a list of TestCaseOut objects.", "scope": "", "scopeKind": ""}, {"name": "get_testcase(testcase_id: int, db: AsyncSession = Depends(get_db))", "description": "Handles GET requests to retrieve details of a specific test case by ID.", "scope": "", "scopeKind": ""}, {"name": "create_testcase(payload: TestCaseCreate, db: AsyncSession = Depends(get_db))", "description": "Handles POST requests to create a new test case with provided schema data.", "scope": "", "scopeKind": ""}, {"name": "update_testcase(testcase_id: int, payload: TestCaseUpdate, db: AsyncSession = Depends(get_db))", "description": "Handles PUT requests to update an existing test case identified by ID.", "scope": "", "scopeKind": ""}, {"name": "delete_testcase(testcase_id: int, db: AsyncSession = Depends(get_db))", "description": "Handles DELETE requests to remove a test case by ID.", "scope": "", "scopeKind": ""}], "calls": ["svc.list_testcases", "svc.get_testcase", "svc.create_testcase", "svc.update_testcase", "svc.delete_testcase"], "search-terms": ["FastAPI router", "testcases API endpoints", "AsyncSession", "TestCaseCreate", "TestCaseOut", "TestCaseUpdate", "testcases"], "state": 2, "file_id": 16, "knowledge_revision": 33, "git_revision": "", "ctags": [{"_type": "tag", "name": "create_testcase", "path": "/home/kavia/workspace/code-generation/testcase-manager-35-44/robot_backend/src/routers/testcases.py", "pattern": "/^async def create_testcase(payload: TestCaseCreate, db: AsyncSession = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(payload: TestCaseCreate, db: AsyncSession = Depends(get_db))"}, {"_type": "tag", "name": "delete_testcase", "path": "/home/kavia/workspace/code-generation/testcase-manager-35-44/robot_backend/src/routers/testcases.py", "pattern": "/^async def delete_testcase(testcase_id: int, db: AsyncSession = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(testcase_id: int, db: AsyncSession = Depends(get_db))"}, {"_type": "tag", "name": "get_testcase", "path": "/home/kavia/workspace/code-generation/testcase-manager-35-44/robot_backend/src/routers/testcases.py", "pattern": "/^async def get_testcase(testcase_id: int, db: AsyncSession = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(testcase_id: int, db: AsyncSession = Depends(get_db))"}, {"_type": "tag", "name": "list_testcases", "path": "/home/kavia/workspace/code-generation/testcase-manager-35-44/robot_backend/src/routers/testcases.py", "pattern": "/^async def list_testcases(db: AsyncSession = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(db: AsyncSession = Depends(get_db))"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/testcase-manager-35-44/robot_backend/src/routers/testcases.py", "pattern": "/^router = APIRouter(prefix=\"\\/testcases\", tags=[\"Testcases\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "svc", "path": "/home/kavia/workspace/code-generation/testcase-manager-35-44/robot_backend/src/routers/testcases.py", "pattern": "/^from src.services import testcases as svc$/", "language": "Python", "kind": "unknown", "nameref": "unknown:testcases"}, {"_type": "tag", "name": "update_testcase", "path": "/home/kavia/workspace/code-generation/testcase-manager-35-44/robot_backend/src/routers/testcases.py", "pattern": "/^async def update_testcase(testcase_id: int, payload: TestCaseUpdate, db: AsyncSession = Depends(/", "language": "Python", "kind": "function", "signature": "(testcase_id: int, payload: TestCaseUpdate, db: AsyncSession = Depends(get_db))"}], "hash": "9bd25823fcb44b4e7765847ce955d125", "format-version": 4, "code-base-name": "robot_backend", "filename": "robot_backend/src/routers/testcases.py", "fields": [{"name": "router = APIRouter(prefix=\"\\/testcases\", tags=[\"Testcases\"])", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"33": ""}]}