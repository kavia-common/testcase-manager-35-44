{"is_source_file": true, "format": "Python", "description": "Defines API routes for managing configuration items using FastAPI, including endpoints for listing, retrieving, and upserting configs. It interacts with database services and schemas specific to configs.", "external_files": ["src.core.db", "src.core.schemas", "src.services"], "external_methods": ["get_db", "list_configs", "get_config", "upsert_config"], "published": ["router"], "classes": [], "methods": [{"name": "list_configs(db: AsyncSession = Depends(get_db))", "description": "Handles GET requests to list all configuration items.", "scope": "", "scopeKind": ""}, {"name": "get_config(key: str, db: AsyncSession = Depends(get_db))", "description": "Handles GET requests to retrieve a specific configuration by key.", "scope": "", "scopeKind": ""}, {"name": "upsert_config(payload: ConfigUpsert, db: AsyncSession = Depends(get_db))", "description": "Handles POST requests to create or update a configuration item.", "scope": "", "scopeKind": ""}], "calls": ["svc.list_configs", "svc.get_config", "svc.upsert_config", "get_db"], "search-terms": ["FastAPI APIRouter configs", "ConfigOut schema", "ConfigUpsert schema", "async def list_configs", "async def get_config", "async def upsert_config"], "state": 2, "file_id": 21, "knowledge_revision": 43, "git_revision": "", "ctags": [{"_type": "tag", "name": "get_config", "path": "/home/kavia/workspace/code-generation/testcase-manager-35-44/robot_backend/src/routers/configs.py", "pattern": "/^async def get_config(key: str, db: AsyncSession = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(key: str, db: AsyncSession = Depends(get_db))"}, {"_type": "tag", "name": "list_configs", "path": "/home/kavia/workspace/code-generation/testcase-manager-35-44/robot_backend/src/routers/configs.py", "pattern": "/^async def list_configs(db: AsyncSession = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(db: AsyncSession = Depends(get_db))"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/testcase-manager-35-44/robot_backend/src/routers/configs.py", "pattern": "/^router = APIRouter(prefix=\"\\/configs\", tags=[\"Configs\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "svc", "path": "/home/kavia/workspace/code-generation/testcase-manager-35-44/robot_backend/src/routers/configs.py", "pattern": "/^from src.services import configs as svc$/", "language": "Python", "kind": "unknown", "nameref": "unknown:configs"}, {"_type": "tag", "name": "upsert_config", "path": "/home/kavia/workspace/code-generation/testcase-manager-35-44/robot_backend/src/routers/configs.py", "pattern": "/^async def upsert_config(payload: ConfigUpsert, db: AsyncSession = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(payload: ConfigUpsert, db: AsyncSession = Depends(get_db))"}], "hash": "8d3135f653d0c813c420019a50824cb1", "format-version": 4, "code-base-name": "robot_backend", "filename": "robot_backend/src/routers/configs.py", "fields": [{"name": "router = APIRouter(prefix=\"\\/configs\", tags=[\"Configs\"])", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"43": ""}]}